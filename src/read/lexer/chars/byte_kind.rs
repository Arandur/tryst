#[derive(Copy, Clone, Debug, PartialEq, Eq)]
pub enum ByteKind {
    Ascii(u32),
    Start2(u32),
    Start3(u32),
    Start4(u32),
    Cont(u32),
    Invalid,
}

impl ByteKind {
    pub fn of(b: u8) -> ByteKind {
        return BYTE_KIND_LUT[b as usize];
    }
}

use ByteKind::*;

const BYTE_KIND_LUT: [ByteKind; 256] = [
    // Ascii bytes: 0b0xxxxxxx
    Ascii(0x00),
    Ascii(0x01),
    Ascii(0x02),
    Ascii(0x03),
    Ascii(0x04),
    Ascii(0x05),
    Ascii(0x06),
    Ascii(0x07),
    Ascii(0x08),
    Ascii(0x09),
    Ascii(0x0a),
    Ascii(0x0b),
    Ascii(0x0c),
    Ascii(0x0d),
    Ascii(0x0e),
    Ascii(0x0f),
    Ascii(0x10),
    Ascii(0x11),
    Ascii(0x12),
    Ascii(0x13),
    Ascii(0x14),
    Ascii(0x15),
    Ascii(0x16),
    Ascii(0x17),
    Ascii(0x18),
    Ascii(0x19),
    Ascii(0x1a),
    Ascii(0x1b),
    Ascii(0x1c),
    Ascii(0x1d),
    Ascii(0x1e),
    Ascii(0x1f),
    Ascii(0x20),
    Ascii(0x21),
    Ascii(0x22),
    Ascii(0x23),
    Ascii(0x24),
    Ascii(0x25),
    Ascii(0x26),
    Ascii(0x27),
    Ascii(0x28),
    Ascii(0x29),
    Ascii(0x2a),
    Ascii(0x2b),
    Ascii(0x2c),
    Ascii(0x2d),
    Ascii(0x2e),
    Ascii(0x2f),
    Ascii(0x30),
    Ascii(0x31),
    Ascii(0x32),
    Ascii(0x33),
    Ascii(0x34),
    Ascii(0x35),
    Ascii(0x36),
    Ascii(0x37),
    Ascii(0x38),
    Ascii(0x39),
    Ascii(0x3a),
    Ascii(0x3b),
    Ascii(0x3c),
    Ascii(0x3d),
    Ascii(0x3e),
    Ascii(0x3f),
    Ascii(0x40),
    Ascii(0x41),
    Ascii(0x42),
    Ascii(0x43),
    Ascii(0x44),
    Ascii(0x45),
    Ascii(0x46),
    Ascii(0x47),
    Ascii(0x48),
    Ascii(0x49),
    Ascii(0x4a),
    Ascii(0x4b),
    Ascii(0x4c),
    Ascii(0x4d),
    Ascii(0x4e),
    Ascii(0x4f),
    Ascii(0x50),
    Ascii(0x51),
    Ascii(0x52),
    Ascii(0x53),
    Ascii(0x54),
    Ascii(0x55),
    Ascii(0x56),
    Ascii(0x57),
    Ascii(0x58),
    Ascii(0x59),
    Ascii(0x5a),
    Ascii(0x5b),
    Ascii(0x5c),
    Ascii(0x5d),
    Ascii(0x5e),
    Ascii(0x5f),
    Ascii(0x60),
    Ascii(0x61),
    Ascii(0x62),
    Ascii(0x63),
    Ascii(0x64),
    Ascii(0x65),
    Ascii(0x66),
    Ascii(0x67),
    Ascii(0x68),
    Ascii(0x69),
    Ascii(0x6a),
    Ascii(0x6b),
    Ascii(0x6c),
    Ascii(0x6d),
    Ascii(0x6e),
    Ascii(0x6f),
    Ascii(0x70),
    Ascii(0x71),
    Ascii(0x72),
    Ascii(0x73),
    Ascii(0x74),
    Ascii(0x75),
    Ascii(0x76),
    Ascii(0x77),
    Ascii(0x78),
    Ascii(0x79),
    Ascii(0x7a),
    Ascii(0x7b),
    Ascii(0x7c),
    Ascii(0x7d),
    Ascii(0x7e),
    Ascii(0x7f),
    // Continuation bytes: 0b10xxxxxx
    Cont(0x00),
    Cont(0x01),
    Cont(0x02),
    Cont(0x03),
    Cont(0x04),
    Cont(0x05),
    Cont(0x06),
    Cont(0x07),
    Cont(0x08),
    Cont(0x09),
    Cont(0x0a),
    Cont(0x0b),
    Cont(0x0c),
    Cont(0x0d),
    Cont(0x0e),
    Cont(0x0f),
    Cont(0x10),
    Cont(0x11),
    Cont(0x12),
    Cont(0x13),
    Cont(0x14),
    Cont(0x15),
    Cont(0x16),
    Cont(0x17),
    Cont(0x18),
    Cont(0x19),
    Cont(0x1a),
    Cont(0x1b),
    Cont(0x1c),
    Cont(0x1d),
    Cont(0x1e),
    Cont(0x1f),
    Cont(0x20),
    Cont(0x21),
    Cont(0x22),
    Cont(0x23),
    Cont(0x24),
    Cont(0x25),
    Cont(0x26),
    Cont(0x27),
    Cont(0x28),
    Cont(0x29),
    Cont(0x2a),
    Cont(0x2b),
    Cont(0x2c),
    Cont(0x2d),
    Cont(0x2e),
    Cont(0x2f),
    Cont(0x30),
    Cont(0x31),
    Cont(0x32),
    Cont(0x33),
    Cont(0x34),
    Cont(0x35),
    Cont(0x36),
    Cont(0x37),
    Cont(0x38),
    Cont(0x39),
    Cont(0x3a),
    Cont(0x3b),
    Cont(0x3c),
    Cont(0x3d),
    Cont(0x3e),
    Cont(0x3f),
    // Start2 bytes: 0b110xxxxx
    Start2(0x00),
    Start2(0x01),
    Start2(0x02),
    Start2(0x03),
    Start2(0x04),
    Start2(0x05),
    Start2(0x06),
    Start2(0x07),
    Start2(0x08),
    Start2(0x09),
    Start2(0x0a),
    Start2(0x0b),
    Start2(0x0c),
    Start2(0x0d),
    Start2(0x0e),
    Start2(0x0f),
    Start2(0x10),
    Start2(0x11),
    Start2(0x12),
    Start2(0x13),
    Start2(0x14),
    Start2(0x15),
    Start2(0x16),
    Start2(0x17),
    Start2(0x18),
    Start2(0x19),
    Start2(0x1a),
    Start2(0x1b),
    Start2(0x1c),
    Start2(0x1d),
    Start2(0x1e),
    Start2(0x1f),
    // Start3 bytes: 0b1110xxxx
    Start3(0x00),
    Start3(0x01),
    Start3(0x02),
    Start3(0x03),
    Start3(0x04),
    Start3(0x05),
    Start3(0x06),
    Start3(0x07),
    Start3(0x08),
    Start3(0x09),
    Start3(0x0a),
    Start3(0x0b),
    Start3(0x0c),
    Start3(0x0d),
    Start3(0x0e),
    Start3(0x0f),
    // Start4 bytes: 0b11110xxx
    Start4(0x00),
    Start4(0x01),
    Start4(0x02),
    Start4(0x03),
    Start4(0x04),
    Start4(0x05),
    Start4(0x06),
    Start4(0x07),
    // Invalid bytes: 0b11111xxx
    Invalid,
    Invalid,
    Invalid,
    Invalid,
    Invalid,
    Invalid,
    Invalid,
    Invalid,
];
